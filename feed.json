{
  "version": "https://jsonfeed.org/version/1",
  "title": "Eric Jones",
  "home_page_url": "https://its-ericjones.github.io",
  "feed_url": "https://its-ericjones.github.iofeed.json",
  "description": "Technology Enthusiast | Casual Writer | All Around Nerd",
  "favicon": "https://its-ericjones.github.io/assets/favicon.ico",
  "expired": false,
  "author": {
    "name": "Eric Jones",
    "url": "https://its-ericjones.github.io"
  },
  "items": [
    
    

    
    {
      "id": "379df736efaa51db777b6039371d122da576bdfe",
      "title": "The Magic of Subler and Applescript",
      "summary": "",
      "content_text": "I\u0026rsquo;ve been in the process of digitizing all my DVDs of movies and tv shows. After I have the files, I like to embed all the relevant metadata into the file itself so I\u0026rsquo;m able to move it to any self hosted media service without having to rely on third party metadata indexers.\nMy application of choice for this task is called Subler which allows me to search various databases for metadata, embed that data, optimize for handheld devices, and export.\nThe process of a few movies or shows is fairly straightforward with a couple clicks and export, however when you\u0026rsquo;re trying to work with an entire tv series you end up having to do the same clicks over and over.\nThis is where automation comes into play. I created a script with AppleScript on macOS that utilizes emulating keyboard shortcuts for the entire workflow.\nHere\u0026rsquo;s a look at the final AppleScript file:\nHere\u0026rsquo;s a preview of the workflow in action:\nThis is what the workflow looks like in Subler if you were to execute it manually:\nImporting Files Search and Adding Metadata Adding Artwork Exporting Having the ability to click a single button and have the entire process execute without having to lift a finger makes going through many tv series much more manageable.\nThe full Subler.scpt file is available for download over on my GitHub repo.\n",
      "content_html": "\u003cp\u003eI\u0026rsquo;ve been in the process of digitizing all my DVDs of movies and tv shows. After I have the files, I like to embed all the relevant metadata into the file itself so I\u0026rsquo;m able to move it to any self hosted media service without having to rely on third party metadata indexers.\u003c/p\u003e\n\u003cp\u003eMy application of choice for this task is called \u003ca href=\"https://subler.org\"\u003eSubler\u003c/a\u003e which allows me to search various databases for metadata, embed that data, optimize for handheld devices, and export.\u003c/p\u003e\n\u003cp\u003eThe process of a few movies or shows is fairly straightforward with a couple clicks and export, however when you\u0026rsquo;re trying to work with an entire tv series you end up having to do the same clicks over and over.\u003c/p\u003e\n\u003cp\u003eThis is where automation comes into play. I created a script with AppleScript on macOS that utilizes emulating keyboard shortcuts for the entire workflow.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a look at the final AppleScript file:\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/subler-tutorial/Script.png\"\n  alt=\"applescript-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a preview of the workflow in action:\u003c/p\u003e\n\u003cp\u003e\u003cimg\n  src=\"/subler-tutorial/Subler-Script.gif\"\n  alt=\"applescript-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eThis is what the workflow looks like in Subler if you were to execute it manually:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eImporting Files\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg\n  src=\"/subler-tutorial/Step-2-Import-File.png\"\n  alt=\"applescript-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003eSearch and Adding Metadata\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg\n  src=\"/subler-tutorial/Step-3-Add-Metadata.png\"\n  alt=\"applescript-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eAdding Artwork\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg\n  src=\"/subler-tutorial/Step-4-Adding-Artwork-2.png\"\n  alt=\"applescript-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003eExporting\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cimg\n  src=\"/subler-tutorial/Step-5-Exporting.png\"\n  alt=\"applescript-screenshot\"\n  loading=\"lazy\"\n  decoding=\"async\"\n  class=\"full-width\"\n/\u003e\n\n\u003c/p\u003e\n\u003cp\u003eHaving the ability to click a single button and have the entire process execute without having to lift a finger makes going through many tv series much more manageable.\u003c/p\u003e\n\u003cp\u003eThe full Subler.scpt file is available for download over on my \u003ca href=\"https://github.com/its-ericjones/AppleScript/tree/main/Subler\"\u003eGitHub repo\u003c/a\u003e.\u003c/p\u003e\n",
      "url": "https://its-ericjones.github.io/posts/the-magic-of-subler-and-applescript/",
      "date_published": "29126-29-09T120:2929:00+00:00",
      "date_modified": "29126-29-09T120:2929:00+00:00",
      "author": {
        "name": "Eric Jones",
        "url": "https://its-ericjones.github.io"
      }
    },
    
    {
      "id": "4fef3f43218f3d162680223839104197b854c31a",
      "title": "Creation of This Website and How It’s Being Hosted",
      "summary": "",
      "content_text": "Creation At first I was really into the idea of creating this website by hand only using HTML and CSS. As I began to work I soon realized that even though this approach is good for overall development (pun intended), I just don\u0026rsquo;t have the bandwidth to devote this much time to it. My main priority is to continue working on my automation and Python skills as well as writing content to publish online.\nEnter Hugo. This is a static site generator tool that, at a high level, allows you to create posts entirely in plain text with Markdown and easily have these files be converted into their HTML/CSS/JS counterparts.\nUsing Hugo at this point in time will allow me to continue focusing on improving my programming skills which is at the top of my to do list. At some point down the line I do intend to recreate this website entirely by hand but for now, Hugo will do just fine.\nHosting This website is being hosted via GitHub Pages. Each time I make changes, I can run the hugo command to easily recompile all the site files into a local public directory. This directory is part of a remote GitHub repository that is automatically updated via a simple script.\nThe domain name was purchased through Namecheap and it was pretty straightforward to configure Custom DNS to point to GitHub\u0026rsquo;s name servers.\n",
      "content_html": "\u003ch2 id=\"creation\"\u003eCreation\u003c/h2\u003e\n\u003cp\u003eAt first I was really into the idea of creating this website by hand only using HTML and CSS. As I began to work I soon realized that even though this approach is good for overall development (pun intended), I just don\u0026rsquo;t have the bandwidth to devote this much time to it. My main priority is to continue working on my automation and Python skills as well as writing content to publish online.\u003c/p\u003e\n\u003cp\u003eEnter \u003ca href=\"https://gohugo.io/\"\u003eHugo\u003c/a\u003e. This is a static site generator tool that, at a high level, allows you to create posts entirely in plain text with \u003ca href=\"https://daringfireball.net/projects/markdown/\"\u003eMarkdown\u003c/a\u003e and easily have these files be converted into their HTML/CSS/JS counterparts.\u003c/p\u003e\n\u003cp\u003eUsing Hugo at this point in time will allow me to continue focusing on improving my programming skills which is at the top of my to do list. At some point down the line I do intend to recreate this website entirely by hand but for now, Hugo will do just fine.\u003c/p\u003e\n\u003ch2 id=\"hosting\"\u003eHosting\u003c/h2\u003e\n\u003cp\u003eThis website is being hosted via \u003ca href=\"https://pages.github.com/\"\u003eGitHub Pages\u003c/a\u003e. Each time I make changes, I can run the \u003ccode\u003ehugo\u003c/code\u003e command to easily recompile all the site files into a local \u003cstrong\u003epublic\u003c/strong\u003e directory. This directory is part of a remote GitHub repository that is automatically updated via a simple script.\u003c/p\u003e\n\u003cp\u003eThe domain name was purchased through \u003ca href=\"https://www.namecheap.com\"\u003eNamecheap\u003c/a\u003e and it was pretty straightforward to configure Custom DNS to point to GitHub\u0026rsquo;s name servers.\u003c/p\u003e\n",
      "url": "https://its-ericjones.github.io/posts/creation-of-this-website-and-how-its-being-hosted/",
      "date_published": "14126-14-09T120:1414:00+00:00",
      "date_modified": "14126-14-09T120:1414:00+00:00",
      "author": {
        "name": "Eric Jones",
        "url": "https://its-ericjones.github.io"
      }
    },
    
    {
      "id": "c389d99b1110ce7493f41e640ef9a2c82f2a60a3",
      "title": "Miscellaneous SysAdmin Guide",
      "summary": "",
      "content_text": "Jump to Specific Topic: Mounting External Hard Drive Mounting a SMB Share in Ubuntu Setting Up Samba SSH Keys Plex Server Installation and Backup (Linux) Configuring Plex Inside Docker (Ubuntu Jammy) Mounting External Hard Drive Plug in hard drive List all block devices with the name, size, file system type, mount location, and Universally Unique Identifier (take note of the UUID as it will be needed later on) - $ sudo lsblk -o NAME,SIZE,FSTYPE,TYPE,MOUNTPOINT,UUID Take note of the name of desired hard drive (name will be listed on far left side - i.e. sda2 = /dev/sda2) Locate the mount location of the external drive - $ sudo mount [NAME] [MOUNT LOCATION] Check to make sure hard drive is mounted - $ df -h Enabling External Hard Drive Mount Upon Reboot Edit filesystem table - $ sudo nano -Bw /etc/fstab Below last PARTUUID entry - $ UUID=[INSERT UUID] /mnt/USB auto defaults,user,nofail 0 2 Press ^X to exit, Y to save changes, and Enter to confirm Make sure that hard drive will mount upon startup - $ sudo reboot Mounting a SMB Share in Ubuntu This can either be done remotely via SSH from your local machine or directly on the server itself.\nUpdate packages - $ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade -y Install CIFS Utilities - $ sudo apt-get install cifs-utils -y Create directories where you want network shares to mount (ex: /media/nas) - $ mkdir media/nas In home folder (/home/user) create a new text file inside a directory called smb that will contain the username and password of the network share - $ nano smb/.smbcredentials Inside text file - username=[username-of-server] password=[password-of-server] Edit filesystem table - $ sudo nano -Bw /etc/fstab Append the following at the bottom of the file - //SERVER-IP/name-of-share /path-to-mount-location cifs credentials=/path/to/credentials/.smbcredentials,vers=3.0,uid=1000,gid=1000 0 0 Mount SMB share type $ sudo mount -a Setting Up Samba A Samba file server enables file sharing across different operating systems over a network.\nSamba Installation $ sudo apt-get install samba samba-common-bin Samba Share Configuration Edit smb configuration file - $ sudo nano /etc/samba/smb.conf At the bottom of the file - [INSERT LABEL OF HARD DRIVE] comment = LABEL OF HARD DRIVE public = no writeable = yes browsable = yes path = /path-to-mount-point create mask = 0777 directory mask = 0777 only guest = no Require a login for server connection - $ sudo smbpasswd -a pi Connect to Server with Login Have Finder.app active and press Command + K Type smb://[INSERT IP] Click Connect Type in pi as username and your previously chosen password Click on hard drive label to mount the server SSH Keys SSH Keys are stronger than plain text passwords since authentication requires both a private and public key pair.\nCreating a SSH Key on Mac To generate a SSH Key - $ ssh-keygen The prompt will ask where you want to store the RSA private and public keys. If you press Enter then both keys will be stored in the .ssh hidden directory. The next prompt will ask if you want to enter a passphrase. I recommend doing this since leaving this blank will allow anyone who gains control of your private key to login to your servers. ~/.ssh/id_rsa - this is your private key (DO NOT SHARE THIS).\n~/.ssh/id_rsa.pub - this is your public key which you will be copying over to your server.\nStoring SSH Key Passphrase in Keychain For MacOS Monterey or Later\n$ ssh-add --apple-use-keychain ~/.ssh/[your-private-key] For MacOS Big Sur or Earlier\n$ ssh-add -K ~/.ssh/[your-private-key] Configure SSH To Always Use Keychain Create a config file in .ssh folder - $ touch config Type the following inside the config file Host [name-of-server] HostName [ip-address-of-server] UseKeychain yes AddKeysToAgent yes IdentityFile ~/.ssh/[your-private-key] Copying Public Key to Server ssh-copy-id -i ~/.ssh/[your-public-key] user@host Plex Server Installation and Backup (Linux) Plex gives you one place to find and access all the media that matters to you. From personal media on your own server, to free and on-demand Movies \u0026amp; Shows, live TV, podcasts, and web shows, to streaming music, you can enjoy it all in one app, on any device.\nPlex Media Server Installation Adding Plex Package Repository Update and upgrade packages - $ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade -y Installing dependencies and repositories - $ sudo apt-get install apt-transport-https $ curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add - $ echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list $ sudo apt-get update Installing Plex Media Server Package Installing plexmediaserver - $ sudo apt install plexmediaserver If this message plexmediaserver.list (Y/I/N/O/D/Z) [default=N] ? appears, type N Setting up Plex Server via Web Browser In web browser address bar type [YOUR IP]:32400/web Give server a name Select “Add Library” in left-hand side column Select desired type of media When browsing for media click the parent folder that contains the desired media Plex Media Server Backup About Rsync *The rsync command synchronizes files from a source to a destination, on a local machine or over a secure network connection.*\nRsync Options: r = recursive | a = archive | v = verbose | u = update | P = partial / progress\nAbout Tar *Tar stands for tape archive. It is an archiving file format. The tar command creates, maintains, modifies, and extracts files that are archived in the tar format.*\nTar Options: c = create | z = compress / uncompress | v = verbose | f = use the archive file | x = extract\nPlex Media Server Data Directory Location Location: /var/lib/plexmediaserver/Library/Application\\ Support/\nCopy Plex Directory and Create Archived File In main directory - $ rsync -ravuP /var/lib/plexmediaserver/Library/Application\\ Support/ /home/pi/plex-backup/ $ tar -czvf plexbackup.tar.gz /home/pi/plex-backup/Plex\\ Media\\ Server/ Type ls to verify and see \u0026lsquo;plexbackup.tar.gz\u0026rsquo; file Copy Tar File to Local Machine $ rsync -avuPr [USERNAME]@[IP-ADDRESS]:plexbackup.tar.gz ~/path/of/desired/location Restoring Backup $ cp plexbackup.tar.gz /var/lib/plexmediaserver/Library/Application\\ Support/ $ tar -xf plexbackup.tar.gz Re-install Plex Media Server application Configuring Plex Inside Docker (Ubuntu Jammy) Docker \u0026amp; Portainer Installation Update system - $ sudo apt-get update -y Install the required dependencies for Docker - $ sudo apt install apt-transport-https curl gnupg-agent ca-certificates software-properties-common -y Add Docker CPG Key - $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - Set up Docker repository - $ sudo add-apt-repository \u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\u0026#34; Install Docker - $ sudo apt install docker-ce docker-ce-cli containerd.io -y Add current user to Docker group - $ sudo usermod -aG docker [user] $ newgrp docker Start and Enable Docker - $ sudo systemctl start docker \u0026amp;\u0026amp; systemctl enable docker Create Volume for Portainer - $ sudo docker volume create portainer-data Pull Portainer Image From Docker Hub - $ sudo docker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /srv/portainer:/data portainer/portainer To access the web interface of Portainer type [ip-address]:9000 into your address bar Plex Installation Install latest version of Plex container - $ sudo docker pull linuxserver/plex Create Plex container (change TZ and path to media as applicable) $ sudo docker create \\ --name=plex \\ --net=host \\ --restart=always \\ -e VERSION=latest \\ -e PUID=1001 -e PGID=1001 \\ -e TZ=Europe/London \\ -v /home/docker/plex/config:/config \\ -v [path-to-tv-shows]:/data/tvshows \\ -v [path-to-movies]:/data/movies \\ -v /home/docker/plex/transcode:/transcode \\ linuxserver/plex Start Plex container - $ sudo docker start plex Access web interface type [IP-ADDRESS]:32400/web into your address bar ",
      "content_html": "\u003ch3 id=\"jump-to-specific-topic\"\u003eJump to Specific Topic:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"#mounting-external-hard-drive\"\u003eMounting External Hard Drive\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#mounting-a-smb-share-in-ubuntu\"\u003eMounting a SMB Share in Ubuntu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#setting-up-samba\"\u003eSetting Up Samba\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#ssh-keys\"\u003eSSH Keys\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#plex-server-installation-and-backup-linux\"\u003ePlex Server Installation and Backup (Linux)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#configuring-plex-inside-docker-ubuntu-jammy\"\u003eConfiguring Plex Inside Docker (Ubuntu Jammy)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"mounting-external-hard-drive\"\u003eMounting External Hard Drive\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003ePlug in hard drive\u003c/li\u003e\n\u003cli\u003eList all block devices with the name, size, file system type, mount location, and Universally Unique Identifier (take note of the UUID as it will be needed later on) -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo lsblk -o NAME,SIZE,FSTYPE,TYPE,MOUNTPOINT,UUID \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eTake note of the name of desired hard drive (name will be listed on far left side - i.e. sda2 = /dev/sda2)\u003c/li\u003e\n\u003cli\u003eLocate the mount location of the external drive -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo mount \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eNAME\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eMOUNT LOCATION\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eCheck to make sure hard drive is mounted -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ df -h \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"enabling-external-hard-drive-mount-upon-reboot\"\u003eEnabling External Hard Drive Mount Upon Reboot\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eEdit filesystem table -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo nano -Bw /etc/fstab \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eBelow last PARTUUID entry -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ \u003cspan style=\"color:#111\"\u003eUUID\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=[\u003c/span\u003eINSERT UUID\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e /mnt/USB auto defaults,user,nofail \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003ePress \u003ccode\u003e^X\u003c/code\u003e to exit, \u003ccode\u003eY\u003c/code\u003e to save changes, and \u003ccode\u003eEnter\u003c/code\u003e to confirm\u003c/li\u003e\n\u003cli\u003eMake sure that hard drive will mount upon startup -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo reboot \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"mounting-a-smb-share-in-ubuntu\"\u003eMounting a SMB Share in Ubuntu\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eThis can either be done remotely via SSH from your local machine or directly on the server itself.\u003c/em\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUpdate packages -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt-get upgrade -y \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eInstall CIFS Utilities -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get install cifs-utils -y \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eCreate directories where you want network shares to mount (ex: /media/nas) -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ mkdir media/nas \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"4\"\u003e\n\u003cli\u003eIn home folder (/home/user) create a new text file inside a directory called \u003ccode\u003esmb\u003c/code\u003e that will contain the username and password of the network share -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ nano smb/.smbcredentials \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eInside text file -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003eusername\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=[\u003c/span\u003eusername-of-server\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003epassword\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=[\u003c/span\u003epassword-of-server\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"6\"\u003e\n\u003cli\u003eEdit filesystem table -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo nano -Bw /etc/fstab \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"7\"\u003e\n\u003cli\u003eAppend the following at the bottom of the file -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e//SERVER-IP/name-of-share /path-to-mount-location cifs \u003cspan style=\"color:#111\"\u003ecredentials\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e/path/to/credentials/.smbcredentials,vers\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e3.0,uid\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e1000,gid\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1000\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"8\"\u003e\n\u003cli\u003eMount SMB share type\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo mount -a \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"setting-up-samba\"\u003eSetting Up Samba\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eA Samba file server enables file sharing across different operating systems over a network.\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"samba-installation\"\u003eSamba Installation\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get install samba samba-common-bin \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"samba-share-configuration\"\u003eSamba Share Configuration\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eEdit smb configuration file -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo nano /etc/samba/smb.conf \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eAt the bottom of the file -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eINSERT LABEL OF HARD DRIVE\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003ecomment\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e LABEL OF HARD DRIVE \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e no \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003ewriteable\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e yes \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003ebrowsable\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e yes \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#111\"\u003epath\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e /path-to-mount-point \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecreate \u003cspan style=\"color:#111\"\u003emask\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0777\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edirectory \u003cspan style=\"color:#111\"\u003emask\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e0777\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eonly \u003cspan style=\"color:#111\"\u003eguest\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e no \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eRequire a login for server connection -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo smbpasswd -a pi \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"connect-to-server-with-login\"\u003eConnect to Server with Login\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eHave Finder.app active and press \u003ccode\u003eCommand + K\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eType \u003ccode\u003esmb://[INSERT IP]\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eClick \u003ccode\u003eConnect\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eType in \u003ccode\u003epi\u003c/code\u003e as username and your previously chosen password\u003c/li\u003e\n\u003cli\u003eClick on hard drive label to mount the server\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"ssh-keys\"\u003eSSH Keys\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003eSSH Keys are stronger than plain text passwords since authentication requires both a private and public key pair.\u003c/em\u003e\u003c/p\u003e\n\u003ch3 id=\"creating-a-ssh-key-on-mac\"\u003eCreating a SSH Key on Mac\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eTo generate a SSH Key -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ ssh-keygen \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eThe prompt will ask where you want to store the RSA private and public keys. If you press \u003ccode\u003eEnter\u003c/code\u003e then both keys will be stored in the \u003ccode\u003e.ssh\u003c/code\u003e hidden directory.\u003c/li\u003e\n\u003cli\u003eThe next prompt will ask if you want to enter a passphrase. I recommend doing this since leaving this blank will allow anyone who gains control of your private key to login to your servers.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003ccode\u003e~/.ssh/id_rsa\u003c/code\u003e - this is your private key (DO NOT SHARE THIS).\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e~/.ssh/id_rsa.pub\u003c/code\u003e - this is your public key which you will be copying over to your server.\u003c/p\u003e\n\u003ch3 id=\"storing-ssh-key-passphrase-in-keychain\"\u003eStoring SSH Key Passphrase in Keychain\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eFor MacOS Monterey or Later\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ ssh-add --apple-use-keychain ~/.ssh/\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eyour-private-key\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eFor MacOS Big Sur or Earlier\u003c/strong\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ ssh-add -K ~/.ssh/\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eyour-private-key\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"configure-ssh-to-always-use-keychain\"\u003eConfigure SSH To Always Use Keychain\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eCreate a config file in .ssh folder -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ touch config \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eType the following inside the config file\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHost \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ename-of-server\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHostName \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eip-address-of-server\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eUseKeychain yes \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAddKeysToAgent yes \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eIdentityFile ~/.ssh/\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eyour-private-key\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"copying-public-key-to-server\"\u003eCopying Public Key to Server\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-copy-id -i ~/.ssh/\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eyour-public-key\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e user@host \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"plex-server-installation-and-backup-linux\"\u003ePlex Server Installation and Backup (Linux)\u003c/h2\u003e\n\u003cp\u003e\u003cem\u003ePlex gives you one place to find and access all the media that matters to you. From personal media on your own server, to free and on-demand Movies \u0026amp; Shows, live TV, podcasts, and web shows, to streaming music, you can enjoy it all in one app, on any device.\u003c/em\u003e\u003c/p\u003e\n\u003ch2 id=\"plex-media-server-installation\"\u003ePlex Media Server Installation\u003c/h2\u003e\n\u003ch3 id=\"adding-plex-package-repository\"\u003eAdding Plex Package Repository\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eUpdate and upgrade packages -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt-get upgrade -y \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eInstalling dependencies and repositories -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get install apt-transport-https \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ curl https://downloads.plex.tv/plex-keys/PlexSign.key \u003cspan style=\"color:#111\"\u003e|\u003c/span\u003e sudo apt-key add - \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ \u003cspan style=\"color:#111\"\u003eecho\u003c/span\u003e deb https://downloads.plex.tv/repo/deb public main \u003cspan style=\"color:#111\"\u003e|\u003c/span\u003e sudo tee /etc/apt/sources.list.d/plexmediaserver.list  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get update \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"installing-plex-media-server-package\"\u003eInstalling Plex Media Server Package\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eInstalling plexmediaserver -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt install plexmediaserver \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eIf this message \u003ccode\u003eplexmediaserver.list (Y/I/N/O/D/Z) [default=N] ?\u003c/code\u003e appears, type \u003ccode\u003eN\u003c/code\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"setting-up-plex-server-via-web-browser\"\u003eSetting up Plex Server via Web Browser\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eIn web browser address bar type \u003ccode\u003e[YOUR IP]:32400/web\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eGive server a name\u003c/li\u003e\n\u003cli\u003eSelect “Add Library” in left-hand side column\u003c/li\u003e\n\u003cli\u003eSelect desired type of media\u003c/li\u003e\n\u003cli\u003eWhen browsing for media click the parent folder that contains the desired media\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"plex-media-server-backup\"\u003ePlex Media Server Backup\u003c/h2\u003e\n\u003ch3 id=\"about-rsync\"\u003eAbout Rsync\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003e*The rsync command synchronizes files from a source to a destination, on a local machine or over a secure network connection.*\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eRsync Options: r = recursive | a = archive | v = verbose | u = update | P = partial / progress\u003c/p\u003e\n\u003ch3 id=\"about-tar\"\u003eAbout Tar\u003c/h3\u003e\n\u003cp\u003e\u003cem\u003e*Tar stands for tape archive. It is an archiving file format. The tar command creates, maintains, modifies, and extracts files that are archived in the tar format.*\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eTar Options: c = create | z = compress / uncompress | v = verbose | f = use the archive file | x = extract\u003c/p\u003e\n\u003ch3 id=\"plex-media-server-data-directory-location\"\u003ePlex Media Server Data Directory Location\u003c/h3\u003e\n\u003cp\u003eLocation: /var/lib/plexmediaserver/Library/Application\\ Support/\u003c/p\u003e\n\u003ch3 id=\"copy-plex-directory-and-create-archived-file\"\u003eCopy Plex Directory and Create Archived File\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003eIn main directory -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ rsync -ravuP /var/lib/plexmediaserver/Library/Application\u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003eSupport/ /home/pi/plex-backup/ \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ tar -czvf plexbackup.tar.gz /home/pi/plex-backup/Plex\u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003eMedia\u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003eServer/ \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eType \u003ccode\u003els\u003c/code\u003e to verify and see \u0026lsquo;plexbackup.tar.gz\u0026rsquo; file\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"copy-tar-file-to-local-machine\"\u003eCopy Tar File to Local Machine\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ rsync -avuPr \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eUSERNAME\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e@\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eIP-ADDRESS\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e:plexbackup.tar.gz ~/path/of/desired/location \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"restoring-backup\"\u003eRestoring Backup\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ cp plexbackup.tar.gz /var/lib/plexmediaserver/Library/Application\u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003eSupport/  \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ tar -xf plexbackup.tar.gz \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eRe-install Plex Media Server application\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"configuring-plex-inside-docker-ubuntu-jammy\"\u003eConfiguring Plex Inside Docker (Ubuntu Jammy)\u003c/h2\u003e\n\u003ch2 id=\"docker--portainer-installation\"\u003eDocker \u0026amp; Portainer Installation\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eUpdate system -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt-get update -y \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eInstall the required dependencies for Docker -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt install apt-transport-https curl gnupg-agent ca-certificates software-properties-common -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"4\"\u003e\n\u003cli\u003eAdd Docker CPG Key -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg \u003cspan style=\"color:#111\"\u003e|\u003c/span\u003e sudo apt-key add - \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"5\"\u003e\n\u003cli\u003eSet up Docker repository -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo add-apt-repository \u003cspan style=\"color:#d88200\"\u003e\u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"6\"\u003e\n\u003cli\u003eInstall Docker -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo apt install docker-ce docker-ce-cli containerd.io -y \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"7\"\u003e\n\u003cli\u003eAdd current user to Docker group -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo usermod -aG docker \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003euser\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ newgrp docker\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"8\"\u003e\n\u003cli\u003eStart and Enable Docker -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo systemctl start docker \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e systemctl \u003cspan style=\"color:#111\"\u003eenable\u003c/span\u003e docker \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"9\"\u003e\n\u003cli\u003eCreate Volume for Portainer -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo docker volume create portainer-data \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"10\"\u003e\n\u003cli\u003ePull Portainer Image From Docker Hub -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo docker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /srv/portainer:/data portainer/portainer \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"11\"\u003e\n\u003cli\u003eTo access the web interface of Portainer type \u003ccode\u003e[ip-address]:9000\u003c/code\u003e into your address bar\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"plex-installation\"\u003ePlex Installation\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003eInstall latest version of Plex container -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo docker pull linuxserver/plex \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"2\"\u003e\n\u003cli\u003eCreate Plex container (change TZ and path to media as applicable)\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo docker create \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e--name\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eplex \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e--net\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ehost \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e--restart\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003ealways \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-e \u003cspan style=\"color:#111\"\u003eVERSION\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003elatest \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-e \u003cspan style=\"color:#111\"\u003ePUID\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1001\u003c/span\u003e -e \u003cspan style=\"color:#111\"\u003ePGID\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e1001\u003c/span\u003e \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-e \u003cspan style=\"color:#111\"\u003eTZ\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003eEurope/London \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-v /home/docker/plex/config:/config \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-v \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003epath-to-tv-shows\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e:/data/tvshows \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-v \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003epath-to-movies\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e:/data/movies \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e-v /home/docker/plex/transcode:/transcode \u003cspan style=\"color:#8045ff\"\u003e\\ \u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003elinuxserver/plex \n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"3\"\u003e\n\u003cli\u003eStart Plex container -\u003c/li\u003e\n\u003c/ol\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e$ sudo docker start plex\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003col start=\"4\"\u003e\n\u003cli\u003eAccess web interface type \u003ccode\u003e[IP-ADDRESS]:32400/web\u003c/code\u003e into your address bar\u003c/li\u003e\n\u003c/ol\u003e\n",
      "url": "https://its-ericjones.github.io/posts/miscellaneous-sysadmin-guide/",
      "date_published": "17076-17-09T741:1717:00-07:00",
      "date_modified": "17076-17-09T741:1717:00-07:00",
      "author": {
        "name": "Eric Jones",
        "url": "https://its-ericjones.github.io"
      }
    },
    
    {
      "id": "e162b97d7c1b7e99a16edf838d75dd4a5bd43dfd",
      "title": "My Computing Journey",
      "summary": "",
      "content_text": "To give a little history, the first computer that I remember using was a PC in the shape of a bread box that ran Windows XP. I would spend hours upon hours after I got out of class in high school chatting with friends, and admittedly crushes, on AOL Instant Messenger happily neglecting whatever homework that was due the following day. After using it for a number of years I was able to begin my entrance into the world of Apple with Titanium PowerBook G4. I remember being struck by the visual interface of OS X 10.4 Tiger that was radically different than Windows XP. Since that point I\u0026rsquo;ve completely immersed myself into the Apple ecosystem with an iPods, iPhones, and a handful of different desktops and laptops.\nI never really payed much attention to folks who were using Linux - I always thought it was meant for hackers or real computer whizzes. Then I decided to start using a Raspberry Pi. This little credit card size board completely flipped my perception of what the power of Linux could really do. I can\u0026rsquo;t tell you the amount of headaches and late nights I spent attempting to set up this little computer as a headless unit so that I could control everything from the command line on my laptop. Over time however, I slowly began to understand how to complete simple tasks such as connecting via SSH, running update commands, mounting external hard drives, setting up a basic file server, etc. My experience with this Raspberry Pi taught me that if I was able to break larger tasks down into smaller ones and really push myself to keep learning, then the anxiety of not being smart enough would melt away and my confidence would continue to grow.\nThe Raspberry Pi also introduced me into the world of self hosting. As greater parts of our lives are being spent online so is our media consumption. Think of all the streaming services that we have access to. I love having the immediate access to moves and tv shows at an instant but recently I\u0026rsquo;ve begun to think about all the physical media that\u0026rsquo;s been sitting in closets at my house. It\u0026rsquo;s true I could find the majority of it through streaming services but there was still something about it that was bothering me. It almost felt wrong to just abandon media that was my own. I began to digitize all my CDs of music and DVDs of movies and tv shows. I scoured the Internet for guides on how to create my own media server that I could access everything from any device on my home network. I even spoke to some friends and convinced them to create their own media servers using Plex so all of us could share our content. Pretty soon we had our own little private streaming service with hundreds of movies and shows at our fingertips. Most of all - it just felt right to be able to interact with something that I had a part in creating and being able to share that knowledge with people in my life.\n",
      "content_html": "\u003cp\u003eTo give a little history, the first computer that I remember using was a PC in the shape of a bread box that ran Windows XP. I would spend hours upon hours after I got out of class in  high school chatting with friends, and admittedly crushes, on AOL Instant Messenger happily neglecting whatever homework that was due the following day. After using it for a number of years I was able to begin my entrance into the world of Apple with Titanium PowerBook G4. I remember being struck by the visual interface of OS X 10.4 Tiger that was radically different than Windows XP. Since that point I\u0026rsquo;ve completely immersed myself into the Apple ecosystem with an iPods, iPhones, and a handful of different desktops and laptops.\u003c/p\u003e\n\u003cp\u003eI never really payed much attention to folks who were using Linux - I always thought it was meant for hackers or real computer whizzes. Then I decided to start using a Raspberry Pi. This little credit card size board completely flipped my perception of what the power of Linux could really do. I can\u0026rsquo;t tell you the amount of headaches and late nights I spent attempting to set up this little computer as a headless unit so that I could control everything from the command line on my laptop. Over time however, I slowly began to understand how to complete simple tasks such as connecting via SSH, running update commands, mounting external hard drives, setting up a basic file server, etc. My experience with this Raspberry Pi taught me that if I was able to break larger tasks down into smaller ones and really push myself to keep learning, then the anxiety of not being smart enough would melt away and my confidence would continue to grow.\u003c/p\u003e\n\u003cp\u003eThe Raspberry Pi also introduced me into the world of self hosting. As greater parts of our lives are being spent online so is our media consumption. Think of all the streaming services that we have access to. I love having the immediate access to moves and tv shows at an instant but recently I\u0026rsquo;ve begun to think about all the physical media that\u0026rsquo;s been sitting in closets at my house. It\u0026rsquo;s true I could find the majority of it through streaming services but there was still something about it that was bothering me. It almost felt wrong to just abandon media that was my own. I began to digitize all my CDs of music and DVDs of movies and tv shows. I scoured the Internet for guides on how to create my own media server that I could access everything from any device on my home network. I even spoke to some friends and convinced them to create their own media servers using Plex so all of us could share our content. Pretty soon we had our own little private streaming service with hundreds of movies and shows at our fingertips. Most of all - it just felt right to be able to interact with something that I had a part in creating and being able to share that knowledge with people in my life.\u003c/p\u003e\n",
      "url": "https://its-ericjones.github.io/posts/my-computing-journey/",
      "date_published": "29036-29-09T320:2929:00-07:00",
      "date_modified": "29036-29-09T320:2929:00-07:00",
      "author": {
        "name": "Eric Jones",
        "url": "https://its-ericjones.github.io"
      }
    }
    
  ]
}